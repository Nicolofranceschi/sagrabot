{"version":3,"sources":["Editor/Svg.jsx","../../src/index.js","Editor/Pixel.jsx"],"names":["Sedia","color","xmlns","enableBackground","viewBox","d","data-original","transform","fill","stroke","strokeWidth","ref","latency","onSingleClick","onDoubleClick","useEffect","clickRef","clickCount","handleClick","e","setTimeout","Pixel","memo","type","i","selected","onSelect","getxy","useRef","applyColor","useCallback","x","y","undefined","rotation","pixelProps","border","PixelNonSelezionatoTipo0","selectedColor","PixelNonSelezionatoTipo1","PixelSelezionatoTipo0","pixelColor","PixelSelezionatoTipo1","useDoubleClick","style","overflow"],"mappings":"mJAAaA,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACnB,qBACEC,MAAM,6BACNC,iBAAiB,kBACjBC,QAAQ,cAHV,SAKE,sBACEF,MAAM,6BACNG,EAAE,6kDACFC,gBAAc,UACdC,UAAU,iCACVC,KAAMP,EACNQ,OAAQR,EACRS,YAAY,W,8ECHK,SAAC,G,IACtBC,EAII,EAJJA,I,IACAC,eAGI,MAHM,IAGN,E,IAFJC,qBAEI,MAFY,W,OAAA,MAEZ,E,IADJC,qBACI,MADY,W,OAAA,MACZ,EACJC,qBAAU,W,IACFC,EAAWL,EAAjB,QACIM,EAAJ,EACMC,EAAc,SAAAC,GAClBF,KAEAG,YAAW,WACT,IAAIH,EAAkBJ,EAAtB,GACK,IAAII,GAAkBH,KAE3BG,MAJFG,I,OASFJ,2BAfc,GAkBP,WACLA,sC,OC7BAK,EAAQC,gBAAK,YAAmE,IAAhErB,EAA+D,EAA/DA,MAAOsB,EAAwD,EAAxDA,KAAMC,EAAkD,EAAlDA,EAAGC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,MAAOb,EAAoB,EAApBA,cACvDH,EAAMiB,mBACNC,EAAaC,uBAAY,WAC3B,MAAgBH,EAAMH,GAAdO,EAAR,EAAQA,EAAEC,EAAV,EAAUA,EACVN,EAASF,EAAIC,GAAYA,EAASxB,QAAUA,GAASwB,EAASF,OAASA,OAAQU,EAAY,CAAEhC,QAAOsB,OAAMQ,IAAGC,IAAGE,SAAU,IAC1HpB,EAAc,QACf,CAACb,EAAOsB,EAAME,IAEXU,EAAa,CAAExB,MAAKuB,SAAQ,OAAET,QAAF,IAAEA,OAAF,EAAEA,EAAUS,SAAWE,OAAM,OAAGX,QAAH,IAAGA,OAAH,EAAGA,EAAUW,QAEtEC,EAA2B,kBAAM,cAAC,IAAD,2BAAgBF,GAAhB,IAA4BG,cAAerC,MAC5EsC,EAA2B,kBAC7B,eAAC,IAAD,2BAA0BJ,GAA1B,IAAsCG,cAAerC,EAArD,UACI,cAAC,IAAD,IACA,cAAC,IAAD,CAAOA,MAAOA,EAAOqC,cAAerC,SAGtCuC,EAAwB,kBAAM,cAAC,IAAD,2BAAgBL,GAAhB,IAA4BM,WAAU,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAAUxB,MAAOqC,cAAerC,MACtGyC,EAAwB,kBAC1B,eAAC,IAAD,2BAAiBP,GAAjB,IAA6BG,cAAerC,EAA5C,UACI,cAAC,IAAD,CAAYwC,WAAU,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAAUxB,MAAOmC,OAAM,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAUW,SAC3D,cAAC,IAAD,CAAOnC,MAAK,OAAEwB,QAAF,IAAEA,OAAF,EAAEA,EAAUxB,MAAOqC,cAAerC,SAWtD,OAPA0C,EAAe,CACX9B,cAAegB,EACff,cAAe,kBAAMA,EAAcU,IACnCb,MACAC,QAAS,MAGRa,GAAqB,IAATF,EACZE,GAAqB,IAATF,EACbE,EACA,sBAAKmB,MAAO,CAACC,SAAU,UAAvB,UACuB,IAAlBpB,EAASF,KACJ,cAACiB,EAAD,IACA,cAACE,EAAD,IAEN,2BAGI,KAVwB,cAACL,EAAD,IADA,cAACE,EAAD,OAczBlB","file":"static/js/4.dbb046a0.chunk.js","sourcesContent":["export const Sedia = ({ color }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    enableBackground=\"new 0 0 512 512\"\n    viewBox=\"0 0 512 512\"\n  >\n    <path\n      xmlns=\"http://www.w3.org/2000/svg\"\n      d=\"M491.366 427.585l-16.295-271.588c-1.926-32.113-27.591-57.546-59.264-59.646V58.87a898.212 898.212 0 0136.044 6.302c1.498.298 3.035.449 4.568.449 11.212 0 20.916-7.992 23.075-19.002 2.5-12.731-5.824-25.123-18.557-27.624C396.749 6.391 327.798 0 256 0S115.251 6.391 51.063 18.995c-12.732 2.5-21.057 14.893-18.558 27.617 1.209 6.186 4.756 11.524 9.986 15.032 3.916 2.626 8.423 3.987 13.027 3.987 1.533 0 3.076-.151 4.612-.456a899.78 899.78 0 0136.063-6.306v37.48c-31.673 2.1-57.338 27.533-59.264 59.646l-16.295 271.59c-1.329 22.141 6.315 43.228 21.522 59.375C57.364 503.107 77.955 512 100.136 512h11.575a7.5 7.5 0 000-15h-11.575c-18.004 0-34.717-7.218-47.06-20.324s-18.547-30.222-17.469-48.192l16.295-271.588c1.538-25.627 22.853-45.702 48.526-45.702h227.716a7.5 7.5 0 000-15H143.258v-43.4c36.464-3.809 74.151-5.729 112.742-5.729s76.28 1.921 112.742 5.729v43.4h-8.532a7.5 7.5 0 000 15h51.363c25.673 0 46.988 20.075 48.526 45.702l16.295 271.588c1.078 17.971-5.126 35.086-17.469 48.192C446.582 489.782 429.868 497 411.864 497H143.771a7.5 7.5 0 000 15h268.094c22.181 0 42.772-8.893 57.98-25.04 15.206-16.147 22.85-37.234 21.521-59.375zM128.258 96.193h-17.065V56.689a971.857 971.857 0 0117.065-2.203v41.707zm272.549 0h-17.065V54.486a971.857 971.857 0 0117.065 2.203v39.504zM256 32.064c-69.731 0-136.604 6.188-198.777 18.396a8.425 8.425 0 01-6.377-1.273 8.485 8.485 0 01-3.621-5.458c-.906-4.615 2.112-9.108 6.729-10.014C117.191 21.296 185.169 15 256 15s138.809 6.296 202.046 18.714c4.617.906 7.635 5.399 6.728 10.017-.783 3.993-4.297 6.891-8.355 6.891a8.431 8.431 0 01-1.659-.165C392.604 38.252 325.731 32.064 256 32.064z\"\n      data-original=\"#000000\"\n      transform=\"matrix(0 .6 -.6 0 234.6 112.4)\"\n      fill={color}  \n      stroke={color}\n      strokeWidth=\"20\"\n    ></path>\n  </svg>\n);","import { useEffect } from 'react';\n\n/**\n * A simple React hook for differentiating single and double clicks on the same component.\n *\n * @param {node} ref Dom node to watch for double clicks\n * @param {number} [latency=300] The amount of time (in milliseconds) to wait before differentiating a single from a double click\n * @param {function} onSingleClick A callback function for single click events\n * @param {function} onDoubleClick A callback function for double click events\n */\nconst useDoubleClick = ({\n  ref,\n  latency = 300,\n  onSingleClick = () => null,\n  onDoubleClick = () => null\n}) => {\n  useEffect(() => {\n    const clickRef = ref.current;\n    let clickCount = 0;\n    const handleClick = e => {\n      clickCount += 1;\n\n      setTimeout(() => {\n        if (clickCount === 1) onSingleClick(e);\n        else if (clickCount === 2) onDoubleClick(e);\n\n        clickCount = 0;\n      }, latency);\n    };\n\n    // Add event listener for click events\n    clickRef.addEventListener('click', handleClick);\n\n    // Remove event listener\n    return () => {\n      clickRef.removeEventListener('click', handleClick);\n    };\n  });\n};\n\nexport default useDoubleClick;\n","import { memo, useCallback , useRef } from \"react\";\nimport { Pixelstyle, PixelTavolo, OnlyTavolo, HoverablePixelTavolo } from \"./Styled\";\nimport { Sedia } from \"./Svg\";\nimport useDoubleClick from 'use-double-click';\n\n\nconst Pixel = memo(({ color, type, i, selected, onSelect, getxy, onDoubleClick }) => {\n    const ref = useRef();\n    const applyColor = useCallback(() => {\n        const { x,y } = getxy(i);\n        onSelect(i, (selected && selected.color === color && selected.type === type) ? undefined : { color, type, x, y, rotation: 0 });\n        onDoubleClick(null);\n    }, [color, type, selected]);\n\n    const pixelProps = { ref, rotation: selected?.rotation , border : selected?.border };\n\n    const PixelNonSelezionatoTipo0 = () => <Pixelstyle {...pixelProps} selectedColor={color} />;\n    const PixelNonSelezionatoTipo1 = () => (\n        <HoverablePixelTavolo {...pixelProps} selectedColor={color}>\n            <OnlyTavolo />\n            <Sedia color={color} selectedColor={color} />\n        </HoverablePixelTavolo>\n    );\n    const PixelSelezionatoTipo0 = () => <Pixelstyle {...pixelProps} pixelColor={selected?.color} selectedColor={color} />;\n    const PixelSelezionatoTipo1 = () => (\n        <PixelTavolo {...pixelProps} selectedColor={color}>\n            <OnlyTavolo pixelColor={selected?.color} border={selected?.border} />\n            <Sedia color={selected?.color} selectedColor={color} />\n        </PixelTavolo>\n    );\n\n    useDoubleClick({ \n        onSingleClick: applyColor,\n        onDoubleClick: () => onDoubleClick(i),\n        ref,\n        latency: 250\n    });\n\n    if (!selected && type === 1) return <PixelNonSelezionatoTipo1 />;\n    if (!selected && type === 0) return <PixelNonSelezionatoTipo0 />;\n    if (selected) return (\n        <div style={{overflow: 'hidden'}}>\n            {selected.type === 0\n                ? <PixelSelezionatoTipo0 />\n                : <PixelSelezionatoTipo1 />\n            }\n            <div />\n        </div>\n    )\n    else return null;\n});\n\nexport default Pixel;"],"sourceRoot":""}